{"version":3,"sources":["Monsters sync /^/.//.*/.json$","Util.ts","MacApp.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","elementChecker","array","arr","push","length","Title","Typography","Text","Option","Select","onSearch","value","MacApp","document","title","useState","world","setWorld","monsterId","setMonsterId","monster","setMonster","mobList","setMobList","sortType","setSortType","monsterLevel","setMonsterLevel","monsterAvoid","setMonsterAvoid","charLevel","setCharLevel","charAcc","setCharAcc","charLuk","setCharLuk","damageType","setDamageType","result","setResult","useEffect","mobs","data","require","key","name","getMobs","undefined","mob","find","item","level","avoid","mobLevel","mobAvoid","diff","acc100","acc1","accRatio","curAcc","Math","floor","accPart","round","pow","toPrecision","doSomeMath","sortedList","sort","a","b","className","style","color","padding","justify","span","onChange","parseInt","target","Group","showSearch","width","placeholder","optionFilterProp","defaultValue","toString","filterOption","input","option","children","toLowerCase","indexOf","height","src","weak","strong","immune","hp","exp","textAlign","App","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d04add0.chunk.js","sourcesContent":["var map = {\n\t\"./Aqua.json\": 133,\n\t\"./Bosses.json\": 134,\n\t\"./China.json\": 135,\n\t\"./LudusLake.json\": 136,\n\t\"./Masteria.json\": 137,\n\t\"./Minar.json\": 138,\n\t\"./MuLung.json\": 139,\n\t\"./Neotokyo.json\": 140,\n\t\"./Nihal.json\": 141,\n\t\"./OrbNath.json\": 142,\n\t\"./PQ.json\": 143,\n\t\"./Singapore.json\": 144,\n\t\"./Taiwan.json\": 145,\n\t\"./Thailand.json\": 146,\n\t\"./ToT.json\": 147,\n\t\"./VicIsland.json\": 148,\n\t\"./Zipangu.json\": 149,\n\t\"./all.json\": 150\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 132;","export interface Mob {\n  name: string;\n  id: string;\n  avoid: number;\n  exp: number;\n  hp: number;\n  immune: boolean[];\n  level: number;\n  strong: boolean[];\n  weak: boolean[];\n}\n\nexport const getMobs = (world: string) => {\n  const data = require(\"./Monsters/\" + world + \".json\");\n  const mobs: Mob[] = Object.keys(data).map((key) => {\n    const mob: Mob = { name: key, ...data[key] };\n    return mob;\n  });\n  return mobs;\n};\n\nexport const elementChecker = (array: boolean[]) => {\n  const arr = [];\n  if (array[0]) arr.push(\"Ice\");\n  if (array[1]) arr.push(\"Lightning\");\n  if (array[2]) arr.push(\"Fire\");\n  if (array[3]) arr.push(\"Poison\");\n  if (array[4]) arr.push(\"Holy\");\n  if (arr.length === 0) arr.push(\"-\");\n  return arr;\n};\n\nexport const doSomeMath = (\n  mobLevel: number,\n  mobAvoid: number,\n  charLevel: number,\n  charAcc: number,\n  charLuk: number,\n  damageType: string\n) => {\n  let diff = mobLevel - charLevel;\n  let acc100 = 0;\n  let acc1 = 0;\n  let accRatio = 0;\n  if (diff < 0) {\n    diff = 0;\n  }\n  if (damageType === \"Physical\") {\n    // prettier-ignore\n    acc100 = (55.2 + 2.15 * diff) * (mobAvoid / 15.0);\n    acc1 = acc100 * 0.5 + 1;\n    // prettier-ignore\n    accRatio = 100 * ((charAcc - (acc100 * 0.5)) / (acc100 * 0.5));\n  } else {\n    let curAcc = Math.floor(charAcc / 10) + Math.floor(charLuk / 10);\n    // prettier-ignore\n    acc100 = Math.floor((mobAvoid + 1.0) * (1.0 + (0.04 * diff)));\n    acc1 = Math.round(0.41 * acc100);\n    const accPart = (curAcc - acc1 + 1) / (acc100 - acc1 + 1);\n    // prettier-ignore\n    accRatio =\n      ((-0.7011618132 * Math.pow(accPart, 2)) + (1.702139835 * accPart)) * 100;\n  }\n\n  if (accRatio > 100) {\n    accRatio = 100;\n  } else if (accRatio < 0) {\n    accRatio = 0;\n  }\n\n  return [\n    acc1.toPrecision(3),\n    acc100.toPrecision(3),\n    accRatio.toPrecision(3) + \"%\",\n  ];\n};\n","import {\n  Breadcrumb,\n  Col,\n  Divider,\n  Image,\n  Input,\n  Layout,\n  Radio,\n  Row,\n  Select,\n  Typography,\n} from \"antd\";\nimport { Header, Content, Footer } from \"antd/lib/layout/layout\";\nimport React, { useEffect, useState } from \"react\";\nimport { doSomeMath, elementChecker, getMobs, Mob } from \"./Util\";\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nfunction onSearch(value: string) {}\n\nexport const MacApp = () => {\n  document.title = \"Maple-Accuracy-Calculator\";\n  const [world, setWorld] = useState<string>(\"all\");\n  const [monsterId, setMonsterId] = useState<string | undefined>();\n  const [monster, setMonster] = useState<Mob | undefined>();\n  const [mobList, setMobList] = useState<Mob[]>([]);\n  const [sortType, setSortType] = useState(\"Alpha\");\n  const [monsterLevel, setMonsterLevel] = useState<number>();\n  const [monsterAvoid, setMonsterAvoid] = useState<number>();\n  const [charLevel, setCharLevel] = useState<number>();\n  const [charAcc, setCharAcc] = useState<number>();\n  const [charLuk, setCharLuk] = useState<number>();\n  const [damageType, setDamageType] = useState(\"Physical\");\n  const [result, setResult] = useState([\"0\", \"0\", \"0\"]);\n\n  useEffect(() => {\n    const mobs: Mob[] = getMobs(world);\n    setMobList(mobs);\n    setMonsterId(undefined);\n    setMonster(undefined);\n  }, [world]);\n\n  useEffect(() => {\n    if (monsterId) {\n      const mob = mobList.find((item) => item.id === monsterId);\n      setMonster(mob);\n      setMonsterLevel(mob ? mob.level : 0);\n      setMonsterAvoid(mob ? mob.avoid : 0);\n    }\n  }, [monsterId]);\n\n  useEffect(() => {\n    setResult(\n      doSomeMath(\n        monsterLevel || 0,\n        monsterAvoid || 0,\n        charLevel || 0,\n        charAcc || 0,\n        charLuk || 0,\n        damageType\n      )\n    );\n  }, [monsterLevel, monsterAvoid, charAcc, charLevel, charLuk, damageType]);\n\n  const sortedList =\n    sortType === \"Alpha\"\n      ? mobList\n      : mobList.sort((a, b) => (a.level > b.level ? 1 : -1));\n\n  const footerText =\n    \"Special thanks to Screaming Statue and Nekonecat for their accuracy calculators, ayumilove and 安心 for their formulas, Nani for being the best guild and Treehouse for being the best alliance <3\";\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <Title style={{ color: \"white\" }}>MAC</Title>\n      </Header>\n      <Content style={{ padding: \"0 50px\" }}>\n        <Row justify=\"center\">\n          <Title level={5}>Monster's Stats</Title>\n        </Row>\n        <Row>\n          <Col span={6}>\n            <Text>Level</Text>\n          </Col>\n          <Col span={6}>\n            <Input\n              value={monsterLevel}\n              onChange={(e) => {\n                setMonsterLevel(parseInt(e.target.value) || undefined);\n              }}\n            />\n          </Col>\n          <Col span={6}>\n            <Text>Avoid</Text>\n          </Col>\n          <Col span={6}>\n            <Input\n              value={monsterAvoid}\n              onChange={(e) =>\n                setMonsterAvoid(parseInt(e.target.value) || undefined)\n              }\n            />\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Title level={5}>Character's Stats</Title>\n        </Row>\n        <Row>\n          <Col span={6}>\n            <Text>Level</Text>\n          </Col>\n          <Col span={6}>\n            <Input\n              value={charLevel}\n              onChange={(e) => {\n                setCharLevel(parseInt(e.target.value) || undefined);\n              }}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Radio.Group\n            onChange={(e) => setDamageType(e.target.value)}\n            value={damageType}\n          >\n            <Radio value={\"Physical\"}>Physical</Radio>\n            <Radio value={\"Magical\"}>Magical</Radio>\n          </Radio.Group>\n        </Row>\n        <Row>\n          <Col span={6}>\n            <Text>{damageType === \"Physical\" ? \"ACC\" : \"INT\"}</Text>\n          </Col>\n          <Col span={6}>\n            <Input\n              value={charAcc}\n              onChange={(e) => {\n                setCharAcc(parseInt(e.target.value) || undefined);\n              }}\n            />\n          </Col>\n          <Col span={6}>\n            <Text>LUK</Text>\n          </Col>\n          <Col span={6}>\n            <Input\n              value={charLuk}\n              onChange={(e) => {\n                setCharLuk(parseInt(e.target.value) || undefined);\n              }}\n            />\n          </Col>\n        </Row>\n        <Divider />\n        <Row justify=\"center\">\n          <Col span={24}>Accuracy for 1%: {result[0]}</Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col span={24}>Accuracy for 100%: {result[1]}</Col>\n        </Row>\n        <Row justify=\"center\">\n          <Col span={24}>Hit Rate: {result[2]}</Col>\n        </Row>\n        <Divider />\n        <Row justify=\"center\">\n          <Title level={4}>Monster Selector</Title>\n        </Row>\n        <Row justify=\"center\">\n          <Col span={24}>\n            <Row justify=\"center\">\n              <Select\n                showSearch\n                style={{ width: 200 }}\n                placeholder=\"Select a world\"\n                optionFilterProp=\"children\"\n                defaultValue=\"all\"\n                onChange={setWorld}\n              >\n                <Option value=\"all\">All Worlds</Option>\n                <Option value=\"Bosses\">Bosses</Option>\n                <Option value=\"Aqua\">Aqua Road</Option>\n                <Option value=\"China\">China</Option>\n                <Option value=\"LudusLake\">Ludibrium/KFT/Omega</Option>\n                <Option value=\"Masteria\">Masteria</Option>\n                <Option value=\"Minar\">Minar</Option>\n                <Option value=\"MuLung\">Mu Lung</Option>\n                <Option value=\"Neotokyo\">Neotokyo</Option>\n                <Option value=\"Nihal\">Ariant/Magatia</Option>\n                <Option value=\"OrbNath\">Orbis/El Nath</Option>\n                <Option value=\"PQ\">PQ/Job</Option>\n                <Option value=\"Singapore\">Singapore</Option>\n                <Option value=\"Taiwan\">Taiwan</Option>\n                <Option value=\"Thailand\">Thailand</Option>\n                <Option value=\"ToT\">Temple of Time</Option>\n                <Option value=\"VicIsland\">Victoria Island</Option>\n                <Option value=\"Zipangu\">Zipangu</Option>\n              </Select>\n              <Text>Sort List By: </Text>\n              <Radio.Group\n                onChange={(e) => setSortType(e.target.value)}\n                value={sortType}\n              >\n                <Radio value={\"Level\"}>Level</Radio>\n                <Radio value={\"Alpha\"}>Alpha</Radio>\n              </Radio.Group>\n              <Select\n                showSearch\n                style={{ width: 200 }}\n                placeholder=\"Select a mob\"\n                optionFilterProp=\"children\"\n                onChange={(value) => {\n                  setMonsterId(value.toString());\n                }}\n                onSearch={onSearch}\n                filterOption={(input, option) => {\n                  if (option) {\n                    return (\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    );\n                  }\n                  return false;\n                }}\n              >\n                {sortedList &&\n                  sortedList.map((mob) => {\n                    return (\n                      <Option value={mob.id} key={mob.id}>\n                        {mob.name + \"(\" + mob.level + \")\"}\n                      </Option>\n                    );\n                  })}\n              </Select>\n            </Row>\n          </Col>\n        </Row>\n        <Row justify=\"center\">\n          <Image\n            width={200}\n            height={200}\n            src={\n              \"https://mrsoupman.github.io/Maple-ACC-calculator/images/\" +\n              monster?.id +\n              \".png\"\n            }\n          />\n        </Row>\n        <Row justify=\"center\">\n          <Text>Weak: </Text>\n          {monster && elementChecker(monster.weak)}\n        </Row>\n        <Row justify=\"center\">\n          <Text>Strong: </Text>\n          {monster && elementChecker(monster.strong)}\n        </Row>\n        <Row justify=\"center\">\n          <Text>Immune: </Text>\n          {monster && elementChecker(monster.immune)}\n        </Row>\n        <Row justify=\"center\">\n          <Text>HP: </Text>\n          {monster && monster.hp}\n        </Row>\n        <Row justify=\"center\">\n          <Text>EXP: </Text>\n          {monster && monster.exp}\n        </Row>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        <Text>{footerText}</Text>\n      </Footer>\n    </Layout>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { MacApp } from './MacApp';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div><MacApp/></div>\n    );\n    }\n  };\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}